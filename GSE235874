library(tidyverse)
library(standR)
library(SpatialExperiment)
library(ggplot2)
library(ggalluvial)
library(ggsci)
library(cowplot)
countFile <- read_tsv("count.txt") %>% as.data.frame()


sampleAnnoFile <- read_tsv("metadata.txt") %>% 
  as.data.frame() %>% 
  mutate(SegmentDisplayName = paste(ScanLabel,ROILabel,SegmentLabel, sep = " | ") )
head(sampleAnnoFile)[,1:5]
colnames(countFile) %in% sampleAnnoFile$SegmentDisplayName
sampleAnnoFile$SlideName <- gsub('CIP','CER-AP',sampleAnnoFile$SlideName)
featureAnnoFile <- read_tsv("genemeta.txt") %>% as.data.frame()
head(featureAnnoFile)[,1:5]
spe <- readGeoMx(countFile, sampleAnnoFile, featureAnnoFile)



assayNames(spe)
assay(spe, "counts")[1:5,1:5]
assay(spe, "logcounts")[1:5,1:5]
colData(spe)[1:5,1:5]
###Gene level QC
spe <- addPerROIQC(spe, rm_genes = TRUE)
dim(spe)
metadata(spe) |> names()



### 仅提取亚组('control','CIP_3hr','CIP_12hr','CIP_24hr')
### 仅提取亚组("CER-AP_7d", "CER-AP_30d","CER-AP_5d","CER-AP_12hr",
### "CER-AP_14d","CER-AP_72hr","control","CER-AP_48hr","CER-AP_3hr","CER-AP_24hr")
idx <- spe$SlideName %in% c('control','CER-AP_12hr','CER-AP_24hr','CER-AP_48hr')
spe <- spe[, idx]


### 对样本层面做PCA降维
set.seed(100)
spe <- scater::runPCA(spe)

spe$SlideName <- factor(spe$SlideName,levels = c("control","CER-AP_12hr","CER-AP_24hr","CER-AP_48hr"))
pca_results <- reducedDim(spe, "PCA")

drawPCA(spe, assay = 2, color = SlideName)


pcaplot <- drawPCA(spe, precomputed = pca_results, col = SlideName)+
  stat_ellipse(level=0.9)+
  scale_color_bmj()+
  theme_cowplot()+ 
  labs(title = "GSE235874 PCA plot")
pcaplot
ggsave('pcaplotGSE235874.pdf',pcaplot,height = 5,
       limitsize = F,width = 6,units='in')

standR::plotMDS(spe, assay = 2, color = SlideName)


###差异分析 
library(edgeR)
library(limma)
dge <- SE2DGEList(spe)
design <- model.matrix(~0 + SlideName , data = colData(spe))
colnames(design)
colnames(design) <- c('Control','CER12h','CER24h','CER48h')
contr.matrix <- makeContrasts(
  C12vC = CER12h - Control,
  C24vC = CER24h - Control,
  C48vC = CER48h - Control,
  levels = colnames(design))

keep <- filterByExpr(dge, design)
table(keep)
rownames(dge)[!keep]
dge_all <- dge[keep, ]

### BCV check 在差异分析前
dge_all <- estimateDisp(dge_all, design = design, robust = TRUE)

plotBCV(dge_all, legend.position = "topleft", ylim = c(0, 1.3))
bcv_df <- data.frame(
  'BCV' = sqrt(dge_all$tagwise.dispersion),
  'AveLogCPM' = dge_all$AveLogCPM,
  'gene_id' = rownames(dge_all)
)

highbcv <- bcv_df$BCV > 0.6
highbcv_df <- bcv_df[highbcv, ]
points(highbcv_df$AveLogCPM, highbcv_df$BCV, col = "red")
text(highbcv_df$AveLogCPM, highbcv_df$BCV, labels = highbcv_df$gene_id, pos = 4)

### 使用limma做差异分析

v <- voom(dge_all, design, plot = TRUE) 
cor <- duplicateCorrelation(v, design)
cor$consensus
v <- voom(dge_all, design, plot = TRUE,correlation =cor$consensus) 
fit <- lmFit(v)
fit_contrast <- contrasts.fit(fit, contrasts = contr.matrix)
efit <- eBayes(fit_contrast, robust = TRUE)

results_efit<- decideTests(efit, p.value = 0.05)
summary_efit <- summary(results_efit)
vennDiagram(results_efit,
            circle.col = c("#ACD4D6", "#E7ADAC", "#8D91AA"))
summary_efit

### 差异基因可视化
library(ggrepel)
library(tidyverse)
library(cowplot)

de_results_C12vC <- topTable(efit, coef = 1, sort.by = "P", n = Inf, p.value = 0.05)
de_results_C24vC <- topTable(efit, coef = 2, sort.by = "P", n = Inf, p.value = 0.05)
de_results_C48vC <- topTable(efit, coef = 3, sort.by = "P", n = Inf, p.value = 0.05)

###差异基因列表输出
library(DT)
updn_cols <- c(RColorBrewer::brewer.pal(6, 'Greens')[2], RColorBrewer::brewer.pal(6, 'Purples')[2])
de_results_C12vC %>% 
  dplyr::select(c("logFC", "AveExpr", "P.Value", "adj.P.Val")) %>%
  DT::datatable(caption = 'CER 12h vs. Control in Pancreas') %>%
  DT::formatStyle('logFC',
                  valueColumns = 'logFC',
                  backgroundColor = DT::styleInterval(0, rev(updn_cols))) %>%
  DT::formatSignif(1:4, digits = 4)

de_results_C48vC  %>% 
  dplyr::select(c("logFC", "AveExpr", "P.Value", "adj.P.Val")) %>%
  DT::datatable(caption = 'CER 48h vs. Control in Pancreas') %>%
  DT::formatStyle('logFC',
                  valueColumns = 'logFC',
                  backgroundColor = DT::styleInterval(0, rev(updn_cols))) %>%
  DT::formatSignif(1:4, digits = 4)
### 火山图可视化
{de_results_C12vC <- de_results_C12vC %>% 
  mutate(DE = ifelse(logFC > 0 & adj.P.Val <0.05, "UP", 
                     ifelse(logFC <0 & adj.P.Val<0.05, "DOWN", "NOT DE"))) %>%
  mutate(label = ifelse(de_results_C12vC$HUGOSymbol %in% c('Lrg1','Nfkb1'),
                        de_results_C12vC$HUGOSymbol,NA)
  )

p1 <- ggplot(de_results_C12vC,aes(AveExpr, logFC, col = DE)) + 
  geom_point(shape = 1, size = 1) + 
  #geom_text_repel(label = de_results_C12vC$label) +
  theme_cowplot() +
  xlab("Average log-expression") +
  ylab("Log-fold-change") +
  ggtitle("CER 12h vs. Control in Pancreas",
    subtitle ="DE genes") +
  theme(
    plot.title = element_text( hjust = 0.5, vjust = 0, # 调整注标题位置，hjust：horizontal/横向位置调整，vjust：vertical/纵向
                               color = "brown", # 颜色
                               size = 15, # 字体大小
                               family = "", # 调整字体类型
                               face = "bold",  ), # 调整字形，可选："plain"、"bold"、"italic"、"bold.italic"
    plot.subtitle = element_text( hjust = 0.5,
                                  color = "olivedrab",
                                  size = 12,
                                  face = "bold.italic"
    ),
    axis.text.y = element_text( size = 10, # 字体大小。注意：各种属性可以指定一个值整体设置，也可以像后面2条一样分别设置
                                face = c( rep( "italic", 15), rep( "bold.italic", 5 ) ), # 字形
                                color = c( rep( "black", 15), rep( "orange3", 5 ) ) # 颜色
    ),
    # legend.position = c(0.7, 0.3), # 调整legend 的相对xy轴的位置
    # legend.position = "bottom" # 调整legend 在整个图片的位置，和上面的调整方式选其一
  ) +
  scale_color_manual(values = c("#0072b5","gray","#bc3c29")) +
  theme(text = element_text(size=10))
}

lsxx = intersect(intersect(de_results_C12vC$HUGOSymbol,
                           de_results_C24vC$HUGOSymbol),
                 de_results_C48vC$HUGOSymbol) %>% as.data.frame()
  #filter( P.Value < 0.05 ) %>%
  #filter( abs(logFC) > 0 ) %>% 
  #arrange( desc( logFC ) )
colnames(lsxx) <- 'symbolid'
# symbol 转 ENTREZID
library(clusterProfiler)
annot = bitr( lsxx$symbolid, fromType = "SYMBOL",  toType = c("ENTREZID"),
              OrgDb = "org.Mm.eg.db", drop = F ) %>% 
  drop_na() %>% 
  distinct( SYMBOL, .keep_all = T ) 

lsxx = lsxx %>%  
  mutate( ENTREZID = annot$ENTREZID[ match(lsxx$symbolid, annot$SYMBOL ) ] ) %>% 
  na.omit( ENTREZID ) 



### 1.3 富集分析----
# 基于 clusterProfiler 包
kegg_data <- enrichKEGG(gene = lsxx$ENTREZID, 
                        keyType = "kegg",
                        organism   = 'mmu', # 种属设置
                        pvalueCutoff = 0.05, # 设置校准P值筛选阈值
                        qvalueCutoff = 0.05, # 设置Q值筛选阈值
                        use_internal_data = F ) %>% # 是否使用本地数据，默认 F 
  setReadable( ., OrgDb = 'org.Mm.eg.db', keyType = 'ENTREZID') 

plot2 = kegg_data@result[kegg_data@result$subcategory %in% "Cancer: overview",] %>% 
  #group_by(category) %>% # 按 category 分组
  slice_min( order_by = pvalue, n = 10 ) %>% 
  #mutate( Ratio = as.numeric( word( GeneRatio, sep = "/" ) ) / # 手动计算 generatio
  #          as.numeric( word( GeneRatio, start = -1, sep = "/" ) ) ) %>% 
  arrange( RichFactor ) %>% # 按 Ratio 排序，可以自定义按什么排序
  mutate( Description = factor( Description, levels = unique(Description), ordered = T ) ) # 配合上一句将 Description 因子化，保证顺序固定

plot2$Description <- gsub('- Mus musculus \\(house mouse\\)', '', plot2$Description)


p2 = ggplot( plot2, aes( x = RichFactor, # 设置 x 对应的属性
                         y = fct_reorder(Description, RichFactor), # y 对应的属性
                         size = Count, # 气泡大小属性
                         color = -log10( pvalue ) # 颜色对应的属性
) ) +
  geom_point()+
  theme_cowplot()+
  ggtitle( label = "coDEGs in 12/24/48h vs. Control in Pancreas", subtitle = "KEGG analysis for DE genes " ) + # 更换全局主题，如 theme_bw()、theme_light()、theme_minimal()、theme_dark()等
  theme(
    plot.title = element_text( hjust = 0.5, vjust = 0, # 调整注标题位置，hjust：horizontal/横向位置调整，vjust：vertical/纵向
                               color = "brown", # 颜色
                               size = 15, # 字体大小
                               family = "", # 调整字体类型
                               face = "bold",  ), # 调整字形，可选："plain"、"bold"、"italic"、"bold.italic"
    plot.subtitle = element_text( hjust = 0.5,
                                  color = "olivedrab",
                                  size = 12,
                                  face = "bold.italic"
    ),
    axis.text.y = element_text( size = 10, # 字体大小。注意：各种属性可以指定一个值整体设置，也可以像后面2条一样分别设置
                                face = c( rep( "italic", 15), rep( "bold.italic", 5 ) ), # 字形
                                color = c( rep( "black", 15), rep( "orange3", 5 ) ) # 颜色
    ),
    # legend.position = c(0.7, 0.3), # 调整legend 的相对xy轴的位置
    # legend.position = "bottom" # 调整legend 在整个图片的位置，和上面的调整方式选其一
  ) +
  scale_color_gradient( "-log10(P)", breaks = c( 4, 10 ), # 设置legend（图例）的显示
                        low = "olivedrab", high = "orange" ) + # 调整散点颜色
  scale_size_continuous( breaks = c( 5, 10), # 设置legend（图例）的显示
                         range = c(2,6) ) +  # 设置散点大小范围
  scale_y_discrete(labels = function(x) str_wrap(x, width = 25),
                   position = "right" )+
  scale_x_reverse() +
  labs(y = "Terms")+
  guides( shape = guide_legend(override.aes = list(size = 4))) # 调整 shape 的 legend 大小
#
p2
ggsave('GSE198183_kegg.pdf',width = 6,height = 5)


### GSEA KEGG富集分析
lsxx

alldiff <- lsxx[order(lsxx$logFC,decreasing = T),]
genelist <- alldiff$logFC
names(genelist) <- alldiff$ENTREZID

gsekegg_data <- gseKEGG(genelist, organism = "mmu", pvalueCutoff = 0.05,nPermSimple = 1000000)



### 挑选基因做柱状图
expr_set <- t(spe@assays@data@listData[["logcounts"]]) %>% as.data.frame() %>% 
  mutate(Group = colData(spe)$SlideName) %>% 
  mutate(dataset='GSE198183')
#save( expr_set, file = "expr_set_GSE198183.rda" )
expr_set <- expr_set[expr_set$Group %in% c("CIP_12hr","control"),]
expr_set$Group <- ifelse(expr_set$Group=="CIP_12hr",'CER 12h','Control')
expr_set$Group <- factor(expr_set$Group,levels = c('Control','CER 12h'))
library(ggpubr)
library(ggsci)
library(cowplot)

ggplot(expr_set, aes(x = Group, fill = Group,
    y = expr_set[,'Lrg1'])) +
  geom_violin() +
  geom_jitter(width = .2) +
  labs(y = "Lrg1 Expression") +
  ggtitle('GSE235874 Digital Spatial Profiling',
          subtitle = 'Lrg1 mRNA expression for CER 12h vs. Control in Pancreas')+
  geom_signif(comparisons = list(c('Control','CER 12h')),
              map_signif_level = T,
              y_position = c(8, 9),
              col = 2,
              size = 1,
              textsize = 3)+
  scale_fill_bmj()+
  theme_cowplot(10)+  
  theme(
    plot.title = element_text( hjust = 0.5, vjust = 0, # 调整注标题位置，hjust：horizontal/横向位置调整，vjust：vertical/纵向
                               color = "brown", # 颜色
                               size = 15, # 字体大小
                               family = "", # 调整字体类型
                               face = "bold",  ), # 调整字形，可选："plain"、"bold"、"italic"、"bold.italic"
    plot.subtitle = element_text( hjust = 0.5,
                                  color = "olivedrab",
                                  size = 12,
                                  face = "bold.italic"
    ),
    axis.text.y = element_text( size = 10, # 字体大小。注意：各种属性可以指定一个值整体设置，也可以像后面2条一样分别设置
                                face = c( rep( "italic", 15), rep( "bold.italic", 5 ) ), # 字形
                                color = c( rep( "black", 15), rep( "orange3", 5 ) ) # 颜色
    ))

ggsave('lrg1_GSE235874.pdf',width = 6,height = 4,units = 'in')

###GSEA and visualisation
library(vissE)
library(igraph)
library(msigdb)
library(GSEABase)

msigdb_mmu <- getMsigdb(org = 'mm', id = 'SYM', version = '7.4')
msigdb_mmu <- appendKEGG(msigdb_mmu)

sc <- listSubCollections(msigdb_mmu)

gsc <- c(subsetCollection(msigdb_mmu, c('h')),
         subsetCollection(msigdb_mmu, 'c2', sc[grepl("^CP:",sc)]),
         subsetCollection(msigdb_mmu, 'c5', sc[grepl("^GO:",sc)])) %>%
  GeneSetCollection()



### Enrichment analysis
fry_indices <- ids2indices(lapply(gsc, geneIds), rownames(v), remove.empty = FALSE)
names(fry_indices) <- sapply(gsc, setName)

gsc_category <- sapply(gsc, function(x) bcCategory(collectionType(x)))
gsc_category <- gsc_category[sapply(fry_indices, length) > 5]

gsc_subcategory <- sapply(gsc, function(x) bcSubCategory(collectionType(x)))
gsc_subcategory <- gsc_subcategory[sapply(fry_indices, length) > 5]

fry_indices <- fry_indices[sapply(fry_indices, length) > 5]

names(gsc_category) = names(gsc_subcategory) = names(fry_indices)

fry_indices_cat <- split(fry_indices, gsc_category[names(fry_indices)])
fry_res_out <- lapply(fry_indices_cat, function (x) {
  limma::fry(v, index = x, design = design, contrast = contr.matrix[,1], robust = TRUE)
})

post_fry_format <- function(fry_output, gsc_category, gsc_subcategory){
  names(fry_output) <- NULL
  fry_output <- do.call(rbind, fry_output)
  fry_output$GenesetName <- rownames(fry_output)
  fry_output$GenesetCat <- gsc_category[rownames(fry_output)]
  fry_output$GenesetSubCat <- gsc_subcategory[rownames(fry_output)]
  return(fry_output)
}

fry_res_sig <- post_fry_format(fry_res_out, gsc_category, gsc_subcategory) %>%
  as.data.frame() %>%
  filter(FDR < 0.05) 

fry_res_sig %>%
  arrange(FDR) %>%
  filter(Direction == "Up") %>%
  .[seq(5),] %>%
  mutate(GenesetName = factor(GenesetName, levels = .$GenesetName)) %>%
  ggplot(aes(GenesetName, -log(FDR))) +
  geom_bar(stat = "identity", fill = "red") +
  theme_bw() +
  coord_flip() +
  ggtitle("Up-regulated")

fry_res_sig %>%
  arrange(FDR) %>%
  filter(Direction == "Down") %>%
  .[seq(5),] %>%
  mutate(GenesetName = factor(GenesetName, levels = .$GenesetName)) %>%
  ggplot(aes(GenesetName, -log(FDR))) +
  geom_bar(stat = "identity", fill = "blue") +
  theme_bw() +
  coord_flip() +
  ggtitle("Down-regulated")

### Visualization
library(vissE)
library(igraph)
library(patchwork)
dovissE <- function(fry_out, de_table, topN = 6, title = "", specific_clusters = NA){
  
  n_row = min(1000, nrow(fry_out))
  gs_sig_name <- fry_out %>% 
    filter(FDR < 0.05) %>%
    arrange(FDR) %>% 
    .[1:n_row,] %>% 
    rownames()
  gsc_sig <- gsc[gs_sig_name,]
  
  gs_ovlap <- computeMsigOverlap(gsc_sig, thresh = 0.15)
  gs_ovnet <- computeMsigNetwork(gs_ovlap, gsc)
  
  gs_stats <- -log10(fry_out[gs_sig_name,]$FDR)
  names(gs_stats) <- gs_sig_name
  
  #identify clusters
  grps = cluster_walktrap(gs_ovnet)
  #extract clustering results
  grps = groups(grps)
  #sort by cluster size
  grps = grps[order(sapply(grps, length), decreasing = TRUE)]
  
  # write output
  output_clusters <- list()
  for(i in seq(length(grps))){
    output_clusters[[i]] <- data.frame(geneset = grps[[i]], cluster = paste0("cluster",names(grps)[i]))
  }
  output_clusters <<- output_clusters %>% bind_rows()
  
  if(is.na(specific_clusters)){
    grps <- grps[1:topN]
  } else {
    grps <- grps[specific_clusters %>% as.character()]
  }
  
  #plot the top 12 clusters
  set.seed(36) #set seed for reproducible layout
  p1 <<- plotMsigNetwork(gs_ovnet, markGroups = grps, 
                         genesetStat = gs_stats, rmUnmarkedGroups = TRUE) +
    scico::scale_fill_scico(name = "-log10(FDR)")
  
  p2 <<- plotMsigWordcloud(gsc, grps, type = 'Name')
  
  genes <- unique(unlist(geneIds(gsc_sig)))
  
  genes_logfc <- de_table %>% rownames_to_column() %>% filter(rowname %in% genes) %>% .$logFC
  names(genes_logfc) <- de_table %>% rownames_to_column() %>% filter(rowname %in% genes) %>% .$rowname
  
  p3 <<- plotGeneStats(genes_logfc, gsc, grps) +
    geom_hline(yintercept = 0, colour = 2, lty = 2) +
    ylab("logFC")
  
  #p4 <- plotMsigPPI(ppi, gsc, grps[1:topN], geneStat = genes_logfc) +
  #  guides(col=guide_legend(title="logFC"))
  
  print(p2 + p1 + p3 + patchwork::plot_layout(ncol = 3) +
          patchwork::plot_annotation(title = title))  
  
}
dev.new(width = 100, height = 100)

dovissE(fry_res_sig, de_genes_toptable_C12vC, topN = 9, title = "CER 12h vs. Control in Pancreas" )

### Cellular deconvolution
library(SpatialDecon)
library(tidyverse)
library(GeoMxWorkflows)
library(ggsci)
+load("D:/GSE235874 DSP/Pancreas_MCA.RData")
mousepancreas <- profile_matrix %>% as.matrix()
dim(mousepancreas)
head(cellGroups)
heatmap(sweep(mousepancreas, 1, apply(mousepancreas, 1, max), "/"),
        labRow = NA, margins = c(10, 5), cexCol = 0.7)

spe <- readGeoMx(countFile, sampleAnnoFile, featureAnnoFile, rmNegProbe = FALSE)
idx <- spe$SlideName %in% c('control','CER-AP_12hr','CER-AP_24hr',
                            'CER-AP_48hr'
                            )
spe <- spe[, idx]
spd <- prepareSpatialDecon(spe)

names(spd)

res <- spatialdecon(norm = spd$normCount,
                    bg = spd$backGround,
                    X = mousepancreas,
                    align_genes = TRUE)

proportion <- res$prop_of_all %>%
  as.data.frame() %>%
  rownames_to_column("CellTypes") %>%
  gather(samples, prop, -CellTypes)%>%
  ggplot(aes(samples, prop, fill = CellTypes)) +
  geom_bar(stat = "identity", position = "stack", color = "black", width = .7) +
  coord_flip() +
  theme_bw() +
  theme(legend.position = "bottom")



### 提取组的数据进一步可视化
p1 <- res$prop_of_all %>%t() %>% as.data.frame() %>% 
  mutate(group_id= factor(spe$SlideName, levels=c("control","CER-AP_12hr","CER-AP_24hr","CER-AP_48hr"))) %>% 
  mutate(sample_id = rownames(.)) %>% 
  gather(,proportion, -c(group_id,sample_id))%>%
  arrange(group_id, sample_id) %>% 
  ggplot(aes(sample_id, proportion, fill = key)) +
  geom_bar(stat = "identity", position = "stack", color = "black", linewidth=0.1,width = 1) +
  facet_wrap(~ group_id, scales = "free",ncol = 1)+
  coord_flip() +
  scale_fill_manual(values = unique(c(pal_npg("nrc")(10),pal_nejm("default")(8),pal_uchicago("default")(9))))+
  theme_cowplot(12) +
  theme(legend.position = "bottom")+
  theme(axis.title.y=element_blank(),
        axis.text.y=element_blank(),
        axis.ticks.y=element_blank())
p1
ggsave('proportion.pdf',p1,height = 10,width = 5,limitsize = T)

### Differential proportion analysis
library(speckle)
source("convertData.R")
propslist <- convertDataToList(res$prop_of_all, 
                               data.type = c("proportions"),
                               transform="asin",
                               scale.fac= colData(spe)$'LOQ Mouse NGS Whole Transcriptome Atlas RNA')

###
colData(spe)$SlideName <- factor(colData(spe)$SlideName, levels = c('control','CER-AP_12hr','CER-AP_24hr',
                                                                    'CER-AP_48hr'))

design <- model.matrix(~0 + SlideName , data = colData(spe))
colnames(design)
colnames(design) <- c('Control','CER12h','CER24h','CER48h')
library(limma)
contr.matrix <- makeContrasts(
  C12vC = CER12h - Control,
  #C24vC = CER24h - Control,
  #C48vC = CER48h - Control,
  levels = colnames(design))
outs <- propeller.ttest(propslist, design, contr.matrix, robust=TRUE,trend=FALSE, sort=TRUE)


###
library(ggpubr)
diff_ct <- outs %>% 
  filter(FDR < 0.05) %>%
  rownames()



colData(spe)$samples_id <- rownames(colData(spe))
res$prop_of_all[diff_ct,]  %>%
  as.data.frame() %>%
  rownames_to_column("CellTypes") %>%
  gather(samples, prop, -CellTypes) %>%
  left_join(as.data.frame(colData(spe)), by = c("samples"="samples_id")) %>% 
  ggplot(aes(SlideName, prop, fill = SlideName)) +
  geom_boxplot(notchwidth=0.01,linewidth=0.1) +  
  scale_y_continuous(limits = c(0, 0.3))+
  facet_wrap(~CellTypes,nrow = 2,scales = "free_y") +
  geom_signif(comparisons = list(c('control','CER-AP_12hr')),
              map_signif_level = T,
              y_position = c(0.225, 0.25),
              col = 2,
              size = 1,
              textsize = 3)+  
  geom_signif(comparisons = list(c('control','CER-AP_24hr')),
              map_signif_level = T,
              y_position = c(0.25, 0.275),
              col = 2,
              size = 1,
              textsize = 3)+
  geom_signif(comparisons = list(c('control','CER-AP_48hr')),
              map_signif_level = T,
              y_position = c(0.275, 0.3),
              col = 2,
              size = 1,
              textsize = 3)+
  scale_fill_bmj()+
  theme_cowplot(12)+  
  theme(axis.text.x = element_text(angle=45,hjust = 1),
                            axis.text = element_text(color = "black",size = 10))+
  #ggtitle('Cellular deconvolution for CER 12/24/48h vs. Control in Pancreas')+
  xlab("") +
  ylab("Proportion")
ggsave('GSE235874_Cellular deconvolution.pdf',width = 12,height = 6)



###把所有细胞做统计学差异
res$prop_of_all%>%
  as.data.frame() %>%
  rownames_to_column("CellTypes") %>%
  gather(samples, prop, -CellTypes) %>%
  left_join(as.data.frame(colData(spe)), by = c("samples"="samples_id")) %>% 
  ggplot(aes(SlideName, prop, fill = SlideName)) +
  geom_boxplot(notchwidth=0.25) +  
  scale_y_continuous(limits = c(0, 0.3))+
  facet_wrap(~CellTypes,nrow = 5,scales = "free") +
  scale_fill_bmj()+
  theme_cowplot(8)+  
  theme(axis.text.x = element_text(angle=45,hjust = 1),
        axis.text = element_text(color = "black",size = 8))+
  ggtitle('Cellular deconvolution for CER 12/24/48h vs. Control in Pancreas')+
  theme(
    plot.title = element_text( hjust = 0.5, vjust = 0, # 调整注标题位置，hjust：horizontal/横向位置调整，vjust：vertical/纵向
                               color = "brown", # 颜色
                               size = 8, # 字体大小
                               family = "", # 调整字体类型
                               face = "bold",  ), # 调整字形，可选："plain"、"bold"、"italic"、"bold.italic"
  )+
  xlab("") +
  ylab("Proportion")
ggsave('GSE235874_Cellular deconvolution_all cells.pdf',width = 8,height = 20)



